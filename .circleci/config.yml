version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.9.2
        environment:
          MIX_ENV: test
      - image: circleci/postgres:11.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: my_new_app_test
          POSTGRES_PASSWORD:

    working_directory: ~/app

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ checksum ".tool-versions" }}-{{ .Branch }}-{{ checksum "mix.lock" }}
            - -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ .Branch }}
            - -{{ .Environment.CACHE_VERSION }}-mix-cache
      - restore_cache:
          keys:
            - -{{ .Environment.CACHE_VERSION }}-build-cache-{{ .Branch }}
            - -{{ .Environment.CACHE_VERSION }}-build-cache
      - run: mix deps.get
      - run: mix compile --warnings-as-errors --force
      - run: mix format --check-formatted --dry-run
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ checksum ".tool-versions" }}-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-mix-cache
          paths: "deps"
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: -{{ .Environment.CACHE_VERSION }}-build-cache
          paths: "_build"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix compile --warnings-as-errors

      - run: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

      - store_test_results:
          path: _build/test/lib/my_new_app/
